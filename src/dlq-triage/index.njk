---
layout: base.njk
title: "DLQ Triage Assistant — find, explain, fix"
description: "Guided DLQ troubleshooting for Kafka Connect/Debezium: list DLQ messages, inspect headers, decode payloads, and map errors to fixes."
canonicalPath: "/dlq-triage/"
head_extra: |
  <link rel="stylesheet" href="{{ '/assets/css/pages/dlq-triage.css' | url }}">
scripts:
  - "/assets/js/pages/dlq-triage.js"
---
{% import "components/ui.njk" as ui %}

{{ ui.hero(heroConfig) | safe }}

<div class="dlq-app">
  <div class="dlq-app__back"><a href="/overview/#series-dlq-triage">← Back to Overview</a></div>
  <div class="dlq-app__content">
    <div class="wrap">
      <section aria-labelledby="dlq-inputs" class="panel">
        <h2 id="dlq-inputs">1) inputs</h2>
        <div class="row">
          <label for="bootstrap">bootstrap:</label>
          <input id="bootstrap" type="text" value="localhost:29092">
          <label for="dlq">dlq topic:</label>
          <input id="dlq" type="text" value="dlq.inventory">
        </div>
        <div class="row">
          <label for="connector">connector name:</label>
          <input id="connector" type="text" value="inventory-connector">
          <label for="group">consumer group (sink):</label>
          <input id="group" type="text" value="my-sink">
        </div>
        <h2 style="margin-top:0.6rem">2) enumerate &amp; peek</h2>
        <button class="btn copy" id="copy1">copy</button>
        <pre><code id="cmd1"># count a sample &amp; show latest offsets
kafka-run-class kafka.tools.GetOffsetShell \
  --broker-list localhost:29092 --topic dlq.inventory --time -1

# peek a few DLQ records (value only)
kafka-console-consumer --bootstrap-server localhost:29092 \
  --topic dlq.inventory --from-beginning --timeout-ms 4000 \
  --max-messages 5 | jq -C .</code></pre>
        <details>
          <summary>show headers &amp; decode original value</summary>
          <button class="btn copy" id="copy2">copy</button>
          <pre><code id="cmd2"># show headers (kafka cli shows headers only with Kafkacat or kcat)
# try kcat if available (brew install kcat)
kcat -b localhost:29092 -t dlq.inventory -C -J -c 5 | jq -C .

# extract original payload if record is wrapped (common in Connect DLQs)
kafka-console-consumer --bootstrap-server localhost:29092 \
  --topic dlq.inventory --from-beginning --timeout-ms 4000 --max-messages 5 \
  | jq -r '.original.value // .record.value // .value // .payload.original.value // .payload.record.value // empty' \
  | jq -C .</code></pre>
        </details>
        <details>
          <summary>connector status &amp; restart</summary>
          <button class="btn copy" id="copy3">copy</button>
          <pre><code id="cmd3">curl -s http://localhost:8083/connectors | jq
curl -s http://localhost:8083/connectors/inventory-connector/status | jq
# restart connector (use sparingly)
curl -s -X POST http://localhost:8083/connectors/inventory-connector/restart</code></pre>
        </details>
        <details>
          <summary>sink lag (is the consumer stuck?)</summary>
          <button class="btn copy" id="copy4">copy</button>
          <pre><code id="cmd4">kafka-consumer-groups --bootstrap-server localhost:29092 \
  --describe --group my-sink</code></pre>
        </details>
      </section>
      <aside class="panel right">
        <section class="card" aria-labelledby="dlq-causes">
          <h2 id="dlq-causes">common DLQ causes → fixes</h2>
          <div class="kvs">
            <div><span class="pill err">java.sql.SQLException</span></div>
            <div>sink rejected a row (PK/unique violation, type mismatch). ➜ check target PK &amp; datatypes; use <a href="/merge-cookbook/">merge/upsert</a> patterns.</div>
            <div><span class="pill warn">org.apache.kafka.common.errors.SerializationException</span></div>
            <div>value/headers not parseable (schema mismatch). ➜ align converters (schemas.enable), topic routing, or use schema registry where required.</div>
            <div><span class="pill warn">org.apache.kafka.connect.errors.ConnectException</span></div>
            <div>connector task error; check Connect logs; the DLQ record will carry context in headers.</div>
            <div><span class="pill ok">key not set / null key</span></div>
            <div>sink requires a key but topic lacks one. ➜ set proper key.converter/key.field or route to a history table, then collapse by key at sink.</div>
          </div>
        </section>
        <section class="card" aria-labelledby="dlq-decode">
          <h2 id="dlq-decode">decode a DLQ record locally</h2>
          <p class="muted small">paste a DLQ JSON line below and we’ll unwrap the original event. nothing is uploaded.</p>
          <textarea id="one" placeholder='{"original":{"value":"{\"before\":...,\"after\":...,\"op\":\"u\"}"}, "error":{"message":"..."} }' style="width:100%;min-height:120px;border:1px solid var(--border);border-radius:.5rem;background:var(--surface2);color:#e6eef7;padding:.6rem;font:13px/1.45 ui-monospace,SFMono-Regular,Menlo,Consolas,monospace"></textarea>
          <div class="row">
            <button class="btn" id="btnDecode">decode</button>
            <a class="btn" href="/debezium-decoder/">open full decoder →</a>
          </div>
          <pre id="decoded" style="display:none"><code></code></pre>
        </section>
        <section class="card" aria-labelledby="dlq-redrive">
          <h2 id="dlq-redrive">safe re-drive (optional)</h2>
          <p class="muted small">once the root cause is fixed, re-drive a few DLQ records into a <em>sandbox</em> topic first.</p>
          <button class="btn copy" id="copy5">copy</button>
          <pre><code id="cmd5"># re-drive DLQ values into a sandbox topic (no headers preserved)
kafka-console-consumer --bootstrap-server localhost:29092 \
  --topic dlq.inventory --from-beginning --max-messages 100 \
  | jq -r '.original.value // .record.value // .value // .payload.original.value // .payload.record.value // empty' \
  | kafka-console-producer --bootstrap-server localhost:29092 --topic sandbox.replay</code></pre>
          <p class="muted small">verify sink behavior on <code>sandbox.replay</code> before touching the original topic.</p>
        </section>
      </aside>
    </div>
  </div>
</div>
