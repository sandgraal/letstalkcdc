---
layout: null
permalink: quickstarts/quickstart-oracle/index.html
---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Oracle CDC Quickstart | CDC: The Missing Manual</title>
    <meta
      name="description"
      content="Oracle CDC quickstart: prerequisites (ARCHIVELOG, supplemental logging), health checks, connector notes, verification, and rollback."
    />
    <!-- Corrected path for styles.css -->
    <link rel="stylesheet" href="/assets/css/styles.css" />
    <style>
      /* Minimal local styles for page-specific elements */
      .box {
        border: 1px solid var(--border-color);
        border-radius: 0.5rem;
        padding: 1rem;
        background: var(--color-background-soft);
        margin-bottom: 1.5rem;
      }
      .grid {
        display: grid;
        gap: 1.5rem;
        grid-template-columns: 1fr;
      }
      @media (min-width: 950px) {
        .grid {
          grid-template-columns: 1fr 1fr;
        }
      }
      pre {
        border: 1px solid var(--border-color);
        border-radius: 0.5rem;
        padding: 0.75rem;
        overflow: auto;
        background: var(--color-background-soft);
      }
      .check {
        list-style: none;
        padding: 0;
        margin: 0.25rem 0 0;
      }
      .check li {
        margin: 0.35rem 0;
      }
      .back-link {
        display: block;
        margin-bottom: 1rem;
        font-weight: 500;
      }
    </style>
    <link
      rel="canonical"
      href="https://letstalkcdc.nfshost.com/quickstarts/quickstart-oracle/"
    />
  </head>
  <body>
    <a class="skip-link" href="#main">Skip to content</a>
    <header class="global-header">
      <div class="nav-container">
        <a class="site-title" href="/"
          >CDC: The Missing Manual | A Deep Dive into Change Data Capture</a
        >
        <div class="nav-right">
          <nav aria-label="Primary" class="nav-links">
            <a href="/">Home</a>
            <a href="/overview/" class="active">The Series</a>
          </nav>
          <button
            aria-label="Toggle dark mode"
            class="theme-toggle"
            data-toggle-theme
            type="button"
          >
            üåì
          </button>
        </div>
      </div>
    </header>

    <main id="main" class="prose">
      <a href="/quickstarts/" class="back-link"
        >‚Üê Back to all Quickstarts</a
      >
      <h1>Oracle CDC ‚Äî Quickstart & Runbook</h1>
      <p class="muted">
        Confirm prerequisites, collect health signals, register a connector,
        verify changes, and roll back safely.
      </p>

      <section class="box">
        <h2>Prerequisites (DB)</h2>
        <ul class="check">
          <li><strong>ARCHIVELOG</strong> mode recommended</li>
          <li>
            <strong>Supplemental logging</strong> enabled (DB-level minimal;
            table-level for key columns or ALL for keyless)
          </li>
          <li>Redo/archive retention window ‚â• snapshot + catch-up time</li>
          <li>
            Stable primary keys (or table log groups capturing merge keys)
          </li>
        </ul>
        <ul class="check">
          <li>
            ARCHIVELOG mode is essential for CDC as it ensures that redo logs
            are safely archived, allowing CDC tools to read historical changes
            and recover from failures. Supplemental logging is critical because,
            by default, Oracle's redo logs might not contain enough information
            to reconstruct the full 'before' image of an updated row; enabling
            it ensures that primary key and/or all changed columns are logged,
            providing complete change events. Verifying ARCHIVELOG mode confirms
            the database preserves transaction history, vital for CDC
            resilience. Checking supplemental_log_data ensures that the redo
            logs contain the necessary information, such as primary keys for
            updates, allowing CDC tools to correctly reconstruct row changes.
          </li>
        </ul>
        <pre><code>-- archivelog and redo
SELECT log_mode FROM v$database;
SELECT sequence#, archived, status FROM v$log ORDER BY first_time DESC FETCH FIRST 5 ROWS ONLY;

-- supplemental logging
SELECT supplemental_log_data_min, supplemental_log_data_all FROM v$database;
SELECT owner, table_name, log_group_name, always, log_group_type
FROM dba_log_groups ORDER BY owner, table_name;</code></pre>
      </section>

      <section class="grid">
        <div class="box">
          <h2>DB Setup (examples)</h2>
          <pre><code>-- table-level log group for keyless merge
ALTER TABLE APP.CUSTOMER ADD LOG GROUP lg_customer_pk (ID) ALWAYS;

-- throttle snapshot scope to avoid redo storms (choose limited tables)
-- and plan off-hours if tables are huge</code></pre>
        </div>
        <div class="box">
          <h2>Connector Notes</h2>
          <ul class="check">
            <li>Prefer narrow includes/filters to reduce LogMiner workload</li>
            <li>Measure redo switch rate before/after snapshot</li>
            <li>Have a plan for LOBs (exclude or route separately if large)</li>
          </ul>
          <pre><code>{
  "name": "oracle-cdc",
  "config": {
    "connector.class": "io.debezium.connector.oracle.OracleConnector",
    "database.hostname": "oracle",
    "database.port": "1521",
    "database.user": "CDC",
    "database.password": "CDC",
    "database.dbname": "ORCLCDB",
    "database.pdb.name": "ORCLPDB1",
    "topic.prefix": "server1",
    "schema.include.list": "APP",
    "table.include.list": "APP.CUSTOMER",
    "tombstones.on.delete": "false",
    "include.schema.changes": "false",
    "snapshot.mode": "initial",
    "errors.tolerance": "all",
    "errors.deadletterqueue.topic.name": "dlq.oracle"
  }
}</code></pre>
        </div>
      </section>

      <section class="grid">
        <div class="box">
          <h2>Verify</h2>
          <pre><code>-- generate a change
UPDATE APP.CUSTOMER SET EMAIL = EMAIL || '.X' WHERE ROWNUM = 1;

-- redo activity sample
SELECT TO_CHAR(first_time,'YYYY-MM-DD HH24:MI') t, COUNT(*) switches
FROM v$log_history WHERE first_time > SYSDATE - 1/24 GROUP BY TO_CHAR(first_time,'YYYY-MM-DD HH24:MI');</code></pre>
          <pre><code>kafka-console-consumer --bootstrap-server localhost:2_blank_blank \
  --topic server1.APP.CUSTOMER --from-beginning --max-messages 5</code></pre>
        </div>
        <div class="box">
          <h2>Acceptance (target/sink)</h2>
          <ul class="check">
            <li>No duplicate PKs after connector restart</li>
            <li>Latest-wins per key by commit timestamp/SCN</li>
            <li>DLQ empty or only expected test errors</li>
          </ul>
          <pre><code>SELECT COUNT(*) rows, COUNT(DISTINCT ID) distinct_keys FROM TARGET_CUSTOMERS;</code></pre>
        </div>
      </section>

      <section class="box">
        <h2>Safe Rollback</h2>
        <p>
          Pause the connector; keep archived logs until downstream is
          consistent. If schema/log-group changes are needed, plan a clean
          re-snapshot of affected tables.
        </p>
      </section>
    </main>

    <footer class="site-footer">
      <p>
        ¬© 2025 Christopher Ennis. A deep dive into the world of Change Data
        Capture.
      </p>
    </footer>

    <script type="module" src="/assets/js/app.js"></script>
  </body>
</html>
